<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Colaboradore extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Colaboradore_model');
    } 

    /*
     * Listing of colaboradores
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('colaboradore/index?');
        $config['total_rows'] = $this->Colaboradore_model->get_all_colaboradores_count();
        $this->pagination->initialize($config);

        $data['colaboradores'] = $this->Colaboradore_model->get_all_colaboradores($params);
        
        $data['_view'] = 'colaboradore/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new colaboradore
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('cpf','Cpf','max_length[15]|required');
		$this->form_validation->set_rules('senha','Senha','max_length[250]|required');
		$this->form_validation->set_rules('email','Email','max_length[40]|valid_email');
		$this->form_validation->set_rules('telefone','Telefone','max_length[14]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'cpf' => $this->input->post('cpf'),
				'senha' => $this->input->post('senha'),
				'email' => $this->input->post('email'),
				'telefone' => $this->input->post('telefone'),
            );
            
            $colaboradore_id = $this->Colaboradore_model->add_colaboradore($params);
            redirect('colaboradore/index');
        }
        else
        {            
            $data['_view'] = 'colaboradore/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a colaboradore
     */
    function edit($id)
    {   
        // check if the colaboradore exists before trying to edit it
        $data['colaboradore'] = $this->Colaboradore_model->get_colaboradore($id);
        
        if(isset($data['colaboradore']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('cpf','Cpf','max_length[15]|required');
			$this->form_validation->set_rules('senha','Senha','max_length[250]|required');
			$this->form_validation->set_rules('email','Email','max_length[40]|valid_email');
			$this->form_validation->set_rules('telefone','Telefone','max_length[14]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'cpf' => $this->input->post('cpf'),
					'senha' => $this->input->post('senha'),
					'email' => $this->input->post('email'),
					'telefone' => $this->input->post('telefone'),
                );

                $this->Colaboradore_model->update_colaboradore($id,$params);            
                redirect('colaboradore/index');
            }
            else
            {
                $data['_view'] = 'colaboradore/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The colaboradore you are trying to edit does not exist.');
    } 

    /*
     * Deleting colaboradore
     */
    function remove($id)
    {
        $colaboradore = $this->Colaboradore_model->get_colaboradore($id);

        // check if the colaboradore exists before trying to delete it
        if(isset($colaboradore['id']))
        {
            $this->Colaboradore_model->delete_colaboradore($id);
            redirect('colaboradore/index');
        }
        else
            show_error('The colaboradore you are trying to delete does not exist.');
    }
    
}
